package robogp.matchmanager;

import robogp.common.RobotMarker;

import java.awt.Color;
import java.awt.Component;
import java.util.ArrayList;
import java.util.List;
import javax.swing.DefaultListCellRenderer;
import javax.swing.DefaultListModel;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JList;
import javax.swing.JOptionPane;

/**
 *
 * @author claudia
 */
public class RobotChooser extends javax.swing.JDialog {

    private final DefaultListModel<RobotMarker> model;
    private int closeStatus;
    private int nRobots;
    /**
     * Creates new form RobotChooser
     */
    public RobotChooser(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        model = new DefaultListModel<>();
        this.robotList.setModel(model);
        this.robotList.setCellRenderer(new RobotCellRenderer());
        this.closeStatus = JOptionPane.CANCEL_OPTION;
    }
    
    public void setup(ArrayList<RobotMarker> availableRobots, int nRobots) {
        this.nRobots = nRobots;
        this.choiceLabel.setText("Scegli " + nRobots + " robots da assegnare.");
        this.model.clear();
        availableRobots.stream().forEach((robot) -> {
            model.addElement(robot);
        });
    }
    
    public List<RobotMarker> getSelection() {
        return this.robotList.getSelectedValuesList();
    }
    
    public int getCloseStatus() {
        return this.closeStatus;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        javax.swing.JPanel jPanel1 = new javax.swing.JPanel();
        choiceLabel = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        robotList = new javax.swing.JList<>();
        javax.swing.JPanel jPanel2 = new javax.swing.JPanel();
        okButton = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createEmptyBorder(5, 5, 5, 5));
        jPanel1.setLayout(new java.awt.BorderLayout(5, 5));

        choiceLabel.setText("jLabel1");
        jPanel1.add(choiceLabel, java.awt.BorderLayout.NORTH);

        jScrollPane1.setViewportView(robotList);

        jPanel1.add(jScrollPane1, java.awt.BorderLayout.CENTER);

        okButton.setText("Ok");
        okButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okButtonActionPerformed(evt);
            }
        });
        jPanel2.add(okButton);

        cancelButton.setText("Cancel");
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });
        jPanel2.add(cancelButton);

        jPanel1.add(jPanel2, java.awt.BorderLayout.SOUTH);

        getContentPane().add(jPanel1, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void okButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okButtonActionPerformed
        if (this.robotList.getSelectedIndices().length != nRobots) {
            JOptionPane.showMessageDialog(this, "Devi assegnare " + nRobots + " robot, ne hai scelti " 
                    + this.robotList.getSelectedIndices().length , "Errore", JOptionPane.ERROR_MESSAGE);
            return;
        }
        this.closeStatus = JOptionPane.OK_OPTION;
        this.setVisible(false);
    }//GEN-LAST:event_okButtonActionPerformed

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        this.closeStatus = JOptionPane.CANCEL_OPTION;
        this.setVisible(false);
    }//GEN-LAST:event_cancelButtonActionPerformed

class RobotCellRenderer extends DefaultListCellRenderer {

    private final JLabel label;
    private final Color textSelectionColor = Color.BLACK;
    private final Color backgroundSelectionColor = Color.YELLOW;
    private final Color textNonSelectionColor = Color.BLACK;
    private final Color backgroundNonSelectionColor = Color.WHITE;

    RobotCellRenderer() {
        label = new JLabel();
        label.setOpaque(true);
    }

    @Override
    public Component getListCellRendererComponent(
            JList list,
            Object value,
            int index,
            boolean selected,
            boolean expanded) {

        RobotMarker robot = (RobotMarker)value;
        label.setIcon(new ImageIcon(robot.getImage(60)));
        label.setText(robot.getName());

        if (selected) {
            label.setBackground(backgroundSelectionColor);
            label.setForeground(textSelectionColor);
        } else {
            label.setBackground(backgroundNonSelectionColor);
            label.setForeground(textNonSelectionColor);
        }

        return label;
    }
}

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cancelButton;
    private javax.swing.JLabel choiceLabel;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton okButton;
    private javax.swing.JList<RobotMarker> robotList;
    // End of variables declaration//GEN-END:variables
}
